BEGIN; -- Déclare une transaction
-- Une transaction est un ensemble de commande destiné à être joué ensemble en coherence.
-- Idée : si une des commandes fail ALORS le SGBD annule toutes les commandes déjà passées.

-- On s'assure que les tables n'existent pas déjà avant de les créer
DROP TABLE IF EXISTS "list", "card", "tag", "card_has_tag" CASCADE;

CREATE TABLE "list" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" TEXT NOT NULL,
  "position" INTEGER NOT NULL DEFAULT 0,
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" TIMESTAMPTZ
);

CREATE TABLE "card" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "content" TEXT NOT NULL DEFAULT '',
  "color" VARCHAR(7),
  "position" INTEGER NOT NULL DEFAULT 0,
  "list_id" INTEGER NOT NULL REFERENCES "list"("id") ON DELETE CASCADE,
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" TIMESTAMPTZ
);

CREATE TABLE "tag" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" TEXT UNIQUE,
  "color" VARCHAR(7),
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" TIMESTAMPTZ
);

CREATE TABLE "card_has_tag" (
  "card_id" INTEGER NOT NULL REFERENCES "card"("id") ON DELETE CASCADE,
  "tag_id" INTEGER NOT NULL REFERENCES "tag"("id") ON DELETE CASCADE,
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" TIMESTAMPTZ,
  PRIMARY KEY ("card_id", "tag_id")
);


COMMIT; -- Ferme une transaction

-- Pour executer le fichier : 
-- psql -U okanban -d okanban -f "fichier" 